# action.yml
name: 'Mutex Action'
branding:
  icon: 'lock'
  color: 'black'
description: 'A simple locking/unlocking mechanism to provide mutual exclusion in Github Actions'
inputs:
  repo-token:
    description: 'The token for accessing the repo.'
    required: false
    default: ${{ github.token }}
  github_server:
    description: 'The GitHub server URL without `https`. This might be useful for e.g. GHES'
    required: false
    default: github.com
  repository:
    description: 'The repository path that stores the lock. E.g `ben-z/gh-action-mutex`'
    required: false
    default: ${{ github.repository }}
  branch:
    description: 'The branch to use for the mutex'
    required: false
    default: 'gh-mutex'
  debug:
    description: 'Print debug output'
    required: false
    default: "false"
  internal_checkout-location:
    description: '[Internal] The location to store the mutex repo'
    required: false
    default: '/run/gh-action-mutex/repo'
  ticket-id-complement:
    description: 'Ticket id suffix to avoid identical values for parallel/matrix jobs in the same workflow run'
    required: false
    default: ''
runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    ARG_BRANCH: ${{ inputs.branch }}
    ARG_CHECKOUT_LOCATION: ${{ inputs.internal_checkout-location }}
    ARG_GITHUB_SERVER: ${{ inputs.github_server }}
    ARG_REPOSITORY: ${{ inputs.repository }}
    ARG_REPO_TOKEN: ${{ inputs.repo-token }}
    ARG_DEBUG: ${{ inputs.debug }}
    ARG_TICKET_ID_COMPLEMENT: ${{ inputs.ticket-id-complement}}
  entrypoint: '/scripts/lock.sh'
  post-entrypoint: '/scripts/unlock.sh'

