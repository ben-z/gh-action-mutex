on: [push]

jobs:
  simple_test:
    runs-on: ubuntu-latest
    name: Simple mutex test
    steps:
      - uses: actions/checkout@v3
      - name: Set up mutex
        uses: ./
      - run: |
          echo "I am protected!"
          sleep 5

  two_clients_test_client_1:
    runs-on: ubuntu-latest
    name: Two clients test (client 1)
    needs: [simple_test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up mutex
        uses: ./
        with:
          branch: gh-mutex-two-clients-test
      - run: |
          echo "I am protected! (Client 1)"
          sleep 20

  two_clients_test_client_2:
    runs-on: ubuntu-latest
    name: Two clients test (client 2)
    needs: [simple_test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up mutex
        uses: ./
        with:
          branch: gh-mutex-two-clients-test
      - run: |
          echo "I am protected! (Client 2)"
          sleep 20

  debug_test:
    runs-on: ubuntu-latest
    name: Test the debug flag
    needs: [two_clients_test_client_1,two_clients_test_client_2]
    steps:
      - uses: actions/checkout@v3
      - name: Set up mutex
        uses: ./
        with:
          debug: "true"
      - run: |
          echo "I am protected!"
          sleep 5
          
  always_unlock_test_1:
    runs-on: ubuntu-latest
    name: Test unlocking even after failed (client 1)
    steps:
      - uses: actions/checkout@v3
      - name: Set up mutex
        uses: ./
        with:
          branch: gh-mutex-unlock-test
      - run: |
          echo "Failing, still should let the mutex free"
          sleep 5
          exit 1

  always_unlock_test_2:
    runs-on: ubuntu-latest
    name: Test unlocking even after failed (client 2)
    needs: [always_unlock_test_1]
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3
      - run: echo "Should not hang"
      - name: Set up mutex
        uses: ./
        with:
          branch: gh-mutex-unlock-test
      - run: sleep 5

